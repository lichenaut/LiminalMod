package com.lichenaut.liminalmod.serialization;// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class AbandonmentMarkers extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_5_26(); }
  public static AbandonmentMarkers getRootAsAbandonmentMarkers(ByteBuffer _bb) { return getRootAsAbandonmentMarkers(_bb, new AbandonmentMarkers()); }
  public static AbandonmentMarkers getRootAsAbandonmentMarkers(ByteBuffer _bb, AbandonmentMarkers obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public AbandonmentMarkers __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Location markers(int j) { return markers(new Location(), j); }
  public Location markers(Location obj, int j) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int markersLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public Location.Vector markersVector() { return markersVector(new Location.Vector()); }
  public Location.Vector markersVector(Location.Vector obj) { int o = __offset(4); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createAbandonmentMarkers(FlatBufferBuilder builder,
      int markersOffset) {
    builder.startTable(1);
    AbandonmentMarkers.addMarkers(builder, markersOffset);
    return AbandonmentMarkers.endAbandonmentMarkers(builder);
  }

  public static void startAbandonmentMarkers(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addMarkers(FlatBufferBuilder builder, int markersOffset) { builder.addOffset(0, markersOffset, 0); }
  public static int createMarkersVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startMarkersVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endAbandonmentMarkers(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishAbandonmentMarkersBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedAbandonmentMarkersBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public AbandonmentMarkers get(int j) { return get(new AbandonmentMarkers(), j); }
    public AbandonmentMarkers get(AbandonmentMarkers obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

